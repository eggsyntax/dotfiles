# Before running, you must:
# sudo apt -y install git && git clone https://github.com/eggsyntax/dotfiles.git && cd dotfiles
# wait for Software Updater to finish (visible in ps as /usr/bin/unattended-upgrade) (may take a long time)

# Exit on any error, be strict
set -euxo pipefail

GNOME_VERSION=`gnome-shell --version | cut -d ' ' -f 3 | tr -d '\n'`

mkdir ~/bin
mkdir -p ~/tmp/vim_backup

echo -e '\nRunning apt upgrade before anything else'
sudo apt -y upgrade

# add chrome repo & key
wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
echo 'deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main' | sudo tee /etc/apt/sources.list.d/google-chrome.list

echo -e '\nInstalling packages with apt'
sudo apt-add-repository -y ppa:teejee2008/ppa
sudo add-apt-repository -y ppa:hluk/copyq
sudo add-apt-repository -y ppa:numix/ppa
sudo apt update
sudo apt -y install curl vim xcape vlc xsel python-pygments openssh-server \
  php-memcached memcached tmux htop make chrome-gnome-shell silversearcher-ag \
  autojump tmuxinator gnome-sushi rename hardinfo jq lm-sensors firefox git copyq \
  gnome-tweak-tool gnome-shell-extensions python-setuptools aptik aptik-gtk \
  google-chrome-stable numix-icon-theme-circle numix-icon-theme-square clojure \
  openjdk-11-jdk openjdk-8-jdk python3-pip fonts-firacode fonts-hack-ttf
sudo apt -y autoremove

# dotfiles
echo -e '\nlinking dotfiles'
cd ~
mv .bashrc .bashrc-original
ln -s dotfiles/.spacemacs
ln -s dotfiles/.vimrc
ln -s dotfiles/.bashrc
ln -s dotfiles/linux-.bash_login .bash_login
ln -s dotfiles/.bash_profile
ln -s dotfiles/.clojure
ln -s dotfiles/.gitconfig
ln -s dotfiles/.inputrc
ln -s dotfiles/.lessfilter
ln -s dotfiles/.tmux.conf

# vim:
echo -e '\nInstalling vim extensions'
mkdir -p ~/.vim/autoload ~/.vim/bundle && curl -LSso ~/.vim/autoload/pathogen.vim https://tpo.pe/pathogen.vim
cd ~/.vim/bundle && git clone git://github.com/altercation/vim-colors-solarized.git

# spacemacs
echo -e '\nInstalling spacemacs'
git clone https://github.com/syl20bnr/spacemacs ~/.emacs.d

# gnome extensions (most need to be manually installed)
echo -e '\nInstalling gnome extensions'
sudo apt -y remove gnome-shell-extension-ubuntu-dock && sudo apt -y install gnome-shell-extension-dashtodock
sudo apt -y install gnome-shell-extension-no-annoyance

echo -e '\nInstalling cdhist'
# https://github.com/bulletmark/cdhist
# cd ~/tmp
sudo pip3 install cdhist
sudo curl https://raw.githubusercontent.com/bulletmark/cdhist/master/cdhist.bashrc > ~/bin/cdhist.bashrc

echo -e '\nMiscellaneous steps'
# rename volume-change bleep to hide it, because it's annoying
sudo mv /usr/share/sounds/freedesktop/stereo/audio-volume-change.oga /usr/share/sounds/freedesktop/stereo/audio-volume-change.oga.backup

# Don't lose ssh connections so fast
echo '\n'                      >> ~/.ssh/config
echo 'Host *'                  >> ~/.ssh/config
echo 'ServerAliveInterval 240' >> ~/.ssh/config

# No message-of-the-day
touch ~/.hushlogin

# jenv
git clone https://github.com/gcuisinier/jenv.git ~/bin/.jenv
echo 'export PATH="$HOME/bin/.jenv/bin:$PATH"' >> ~/.bash_profile
echo 'eval "$(jenv init -)"' >> ~/.bash_profile
# then see [[MAKE NOTE]] & add to this section

# leiningen
curl https://raw.githubusercontent.com/technomancy/leiningen/stable/bin/lein > ~/bin/lein
chmod a+x ~/bin/lein

wget https://raw.githubusercontent.com/tmuxinator/tmuxinator/master/completion/tmuxinator.bash > ~/bin/tmuxinator.bash

# TODO - not working, why?
# keybase (for DW)
# cd ~/tmp
# curl --remote-name https://prerelease.keybase.io/keybase_amd64.deb
# sudo apt -y install ./keybase_amd64.deb
# run_keybase

# some settings accessible in Settings and/or gnome-tweak-tool
dconf write /org/gnome/desktop/input-sources/sources "[('xkb', 'us+dvorak')]"
dconf write /org/gnome/settings-daemon/plugins/color/night-light-enabled true
# prevents overview on single-key (because super_R doesn't exist)
dconf write /org/gnome/mutter/overlay-key "'Super_R'"
dconf write /org/gnome/desktop/input-sources/xkb-options "['ctrl:swap_lalt_lctl', 'ctrl:swap_rwin_rctl', 'compose:rctrl', 'caps:swapescape']"
dconf write /org/gnome/desktop/interface/icon-theme "'Numix-Circle'"
dconf write /org/gnome/desktop/wm/keybindings/panel-main-menu "['<Super>space']"
dconf write /org/gnome/desktop/wm/keybindings/close "['<Super>q']"

cd ~/dotfiles
gsettings list-recursively > cur-settings

echo -e '\nSetup script finished!'

: <<'NON_EXECUTABLE_ORG_MODE'
^ see https://stackoverflow.com/a/46049228 for details on making the rest non-executable

* Note: `dconf watch /` to observe the results of settings changes so they can be recorded here
* Can track settings changes longer-term by putting the output of `gsettings list-recursively` under source control.
* Installation:
** Creating bootable USB stick on mac: https://linuxnewbieguide.org/how-to-put-a-linux-iso-onto-a-usb-stick-and-make-it-bootable-on-a-mac/
** Having some trouble with getting it to boot on the machine. See also linux-on-p51.org
** Outcome: easiest to just burn to DVD and boot from that
* Enable repos:
** sudo -i software-properties-gtk
*** In "other software": add (s/zesty/current-release-nickname/): deb http://archive.canonical.com/ubuntu zesty partner
*** check desired repos in 1st & 2nd tab
*** in updates tab, check desired updates
*** Additional Drivers -- autosearch
* Download & install:
** Firefox addons
*** https://addons.mozilla.org/en-US/firefox/addon/ctrl-number-to-switch-tabs/
*** https://addons.mozilla.org/en-US/firefox/addon/lastpass-password-manager/
*** LastPass
** Pcloud
*** https://www.pcloud.com/how-to-install-pcloud-drive-linux.html
** (Gnome) extensions::
*** (unneeded in 18.04+ ?) Show indicators on top bar, not just that little bottom tray.
**** https://extensions.gnome.org/extension/615/appindicator-support/
**** (discussed at http://www.omgubuntu.co.uk/2017/03/use-indicator-applets-gnome-shell )
*** dash-to-dock. NOTE: [installed above]
**** Must uninstall gnome version?
***** https://github.com/micheleg/dash-to-dock/issues/643#issuecomment-345525969
***** sudo apt remove gnome-shell-extension-ubuntu-dock && sudo apt install gnome-shell-extension-dashtodock
**** (now incorporated in ubuntu, but the original extension is more configurable)
*** no topleft hot corner - https://extensions.gnome.org/extension/118/no-topleft-hot-corner/
*** do not disturb
*** Notification counter
*** NoAnnoyance (eliminate "..window is created" by auto-raising created windows [installed above]
*** openweather
*** DO NOT install Indicator Multiload, breaks 18.04
*** gnome-sushi -- preview from file browser with space bar
*** OLD:
**** system-monitor (right one): https://extensions.gnome.org/extension/120/system-monitor/
**** touchpad indicator
**** System monitor: [wrong one]
***** https://extensions.gnome.org/extension/1064/system-monitor/
**** ubuntu appindicators
**** steal my focus
** Useful extras: http://www.omgubuntu.co.uk/2017/04/things-to-do-after-installing-ubuntu-17-04
** Virtualbox [NOT NEEDED FOR DOCKER]
**** sudo apt install virtualbox
**** May have to do the steps here: https://askubuntu.com/a/229908/325838
** Docker
*** DO NOT NEED docker-machine or virtualbox!
*** docker installation is kind of a pain in the ass.
*** https://docs.docker.com/install/linux/docker-ce/ubuntu/
*** Be sure to add self to docker group, start docker service. May need to reboot.
*** then install docker-compose:
**** https://docs.docker.com/compose/install/
*** Oudated:
**** docker-machine create default
**** eval $(docker-machine env)
* Customization tweaks:
** NOTE: MOST CUSTOMIZATION CAN BE SKIPPED BY COPYING OVER .CONFIG
** Fonts:
*** Fira Mono: https://fonts.google.com/specimen/Fira+Mono
*** Hack: https://sourcefoundry.org/hack/
    --- TODO YOUAREHERE --- on moving now-automated steps
** Window managers:
*** Openbox -- super minimal, elegant
**** With tint2
**** See https://www.youtube.com/watch?v=hWmikVpbrtY
*** Pantheon (from Elementary OS)
**** Installing: https://www.linuxhelp.com/how-to-install-pantheon-desktop-in-ubuntu/
** Network:
*** Static IP address:
**** settings/wifi/hamburger-for-current-network/ipv4: set ipv4 method to manual; assuming 192-based network, add
**** address 192.168.1.WHATEV / netmask 255.0.0.0 / gateway (typically) 192.168.1.1
**** details at https://linuxconfig.org/how-to-configure-static-ip-address-on-ubuntu-18-04-bionic-beaver-linux
** Icons [installed above]
*** Numix
**** sudo add-apt-repository ppa:numix/ppa
**** sudo apt update && sudo apt-get install numix-icon-theme-circle numix-icon-theme-square
*** Papirus
**** sudo add-apt-repository ppa:papirus/papirus
**** sudo apt update && sudo apt install papirus-icon-theme
** Theme:
*** Plano: http://www.omgubuntu.co.uk/2017/04/plano-gtk-theme
** Other:
*** Rename file for volume-change bleep so that it'll be silent: [scripted]
**** sudo mv /usr/share/sounds/freedesktop/stereo/audio-volume-change.oga /usr/share/sounds/freedesktop/stereo/audio-volume-change.oga.backup
**** can `pulseaudio -k` to kill pulseaudio (should auto-restart, I _think_?) to immediately cause it to take effect, but probably better to just live with it until reboot
*** X11-forwarding setup
**** https://unix.stackexchange.com/questions/12755/how-to-forward-x-over-ssh-to-run-graphics-applications-remotely
** Nautilus (file manager):
*** Remove some of the default Nautilus bookmarks:
**** vim ~/.config/user-dirs.dirs
**** sudo vim /etc/xdg/user-dirs.defaults
**** via http://www.arj.no/2017/01/03/nautilus-bookmarks/
** ~/.ssh/config: add [scripted]
Host *
ServerAliveInterval 240
** Add audio eq (may possibly cause problems?):
*** sudo apt install pulseaudio-equalizer
*** https://askubuntu.com/a/982556
*** but then individual applications may not be using the eq. Install volume control
**** https://askubuntu.com/questions/580631/how-to-set-which-output-sound-an-application-should-use
** Silence MOTD, which is typically Canonical spam: [scripted]
*** touch ~/.hushlogin
* Keyboard layout: [automate this after confirming it works right]
** Showing keypresses: `xev`
*** Or in terminal, `showkey`
*** Although note differences: https://superuser.com/a/248568
** Final solution for the P51 (X11):
*** 1. Do some switching in tweak-tool/typing [scripted]
**** Typing / CapsLock / 'Swap ESC and CapsLock'
**** Typing / CtrlKeyPosition / 'Swap left Alt key with left Ctrl key'
*** 2. config file for xkd, at 'sudo vi /usr/share/X11/xkb/keycodes/evdev'
**** Note -- may want to make that file a symbolic link to one in dotfiles
**** Switch the keycodes for the two keys, eg if former contains
      <RCTL> = 105;
      <RALT> = 108;
     Then we switch it to:
      <RCTL> = 108;
      <RALT> = 105;
      & now we have overridden keycodes at low level.
*** 3. And then to set left & rt control to l & r parens:
****  [Doesn't seem to work, still having to run xcape manually] Link dotfiles/linux-.bash_login to ~/.bash_login (so that it runs once on startup):
***** xcape -e 'Control_L=Shift_L|parenleft;Control_R=Shift_R|parenright'
**** Previous version, in .bashrc (which is bad because it runs on every new terminal window etc)):
***** 3. And then to set left & rt control to l & r parens, in .bashrc we add:
****** Important to use `killall xcape` or something first, to ensure that only one xcape process is ever running.
****** xcape -e 'Control_L=Shift_L|parenleft;Control_R=Shift_R|parenright'
*** 4. Everything below this is showing my work; only the above is necessary (for the P51).
**** P51: right-alt is 108, right-ctrl is 105.
**** Some of the basic swaps can be handled via the settings GUI (or tweak-tool)
***** But maybe better to handle it all in the same place.
**** Handled by: xmodmap (basic key customization), xcape (tweak modifier keys), and xkb (?).
**** Documentation
***** Example webpages:
****** http://tiborsimko.org/capslock-escape-control.html
****** http://www.economyofeffort.com/2014/08/11/beyond-ctrl-remap-make-that-caps-lock-key-useful/
****** https://flenniken.net/blog/xcape/
****** xcape + xkb: https://unix.stackexchange.com/questions/326904/make-an-ordinary-key-act-as-modifier-with-xcape-and-xkb
****** http://emacsredux.com/blog/2013/11/12/a-crazy-productivity-boost-remap-return-to-control/
****** https://superuser.com/questions/679284/how-do-i-get-a-valid-xmodmap-while-using-xcape
***** Useful web pages:
****** Key swapping with xkb config file (workaround for xmodmap bug):
******* https://bugs.launchpad.net/ubuntu/+source/xorg-server/+bug/524774/comments/12
******* Crap, this ALMOST works for me. But now my paren modificatinos with xcape are messed up --
******** ctrl_l becomes (((((
******* SOLVED! I had multiple instances of xcape running.
****** Keyboard configuration in Xorg: https://wiki.archlinux.org/index.php/Keyboard_configuration_in_Xorg
****** "An Unreliable Guide to XKB Configuration": https://www.charvolant.org/doug/xkb/
****** XKB guide: https://medium.com/@damko/a-simple-humble-but-comprehensive-guide-to-xkb-for-linux-6f1ad5e13450
****** https://unix.stackexchange.com/questions/158765/using-xcape-xmodmap-to-change-some-keys
***** Reference:
****** List of keysyms (ie names for keys):
******* https://cgit.freedesktop.org/xorg/proto/x11proto/plain/keysymdef.h
****** List of built-in rules (?):
******* https://github.com/Webconverger/webc/blob/master/usr/share/X11/xkb/rules/base.lst
***** Modifier keys -> parens:
****** https://unix.stackexchange.com/questions/320269/change-behaviour-of-modifier-keys
****** Great explanation of customizing keyboard layout with xmodmap! 1st I've ever seen that clarifies the *process*.
******* https://forum.xfce.org/viewtopic.php?pid=40253#p40253
****** Xcape on github: https://github.com/alols/xcape
**** xcape: https://flenniken.net/blog/xcape/
***** install:
****** sudo apt install git gcc make pkg-config libx11-dev libxtst-dev libxi-dev
****** build:
******* cd ~/tmp
******* git clone https://github.com/alols/xcape.git
******* cd xcape
******* make
******* sudo make install
***** Approximate xcape command (in startup, or in .bashrc with check to make sure only run once):
****** xcape -e 'Super_L=Shift_L|parenleft;Super_R=Shift_R|parenright;Caps_Lock=Escape'
****** Or maybe...
****** xcape -e 'Control_L=Shift_L|parenleft;Control_R=Shift_R|parenright;Caps_Lock=Escape'
****** xcape -e 'Alt_R=Control_R;Control_L=Shift_L|parenleft;Control_R=Shift_R|parenright'
****** Until I can figure out how to switch the right-hand ctrl and alt, I've got paren mapped to alt_r:
******* xcape -e 'Control_L=Shift_L|parenleft;Alt_R=Shift_R|parenright'
****** I've seen the paren ones work, but not the caps<->escape.
** Wayland keyboard layout:
*** Swapping right alt and right ctrl:
**** Changed the following in /usr/share/X11/xkb/symbols/ctrl
***** From (this is the "swap_rwin_rctl" section
    replace key <RWIN> { [ Control_R ] };
    replace key <RCTL> { [ Super_R ] };
    modifier_map Mod4    { <RCTL> };
    modifier_map Control { <RWIN> };
***** To (broader context)
 // TODO NOTE! I've coopted this one to swap right-Alt and right-Ctl
 //   instead (because adding a new section in here doesn't add it
 //   to tweaks)
 // Swap the functions of the right Win key and the right Ctrl key.
 partial modifier_keys
 xkb_symbols "swap_rwin_rctl" {
     replace key <RALT> { [ Control_R, Control_R ] };
     replace key <RCTL> { [ Alt_R, Meta_R ] };
     modifier_map Mod1    { <RCTL> };
     modifier_map Control { <RALT> };
 };
**** And then choose "Swap Right Win with Right Ctrl" in tweaks/keyboard/additional-layout-options/Ctrl-position
**** Why replace instead of adding?
***** Because then the new one would have to be added to some subset of the files in rules/, and it's not clear which
****** That's /usr/share/X11/xkb/rules
*** Ctrl-alone as paren:
**** Download evcape - https://github.com/wbolster/evcape
**** Copy evcape.py to /home/egg/bin/
**** Create the file ~/.config/systemd/user/evcape.service, contents as follows:
[Unit]
Description=evcape

[Service]
ExecStart=/home/egg/bin/evcape.py
    press:rightalt,release:rightalt=press:kprightparen,release:kprightparen
    press:leftalt,release:leftalt=press:kpleftparen,release:kpleftparen
Restart=always

[Install]
WantedBy=default.target
*** CopyQ keyboard shortcut doesn't work in all apps, so instead
**** Disable it in CopyQ
**** Add a system shortcut (typically WIN-SHIFT-c) (from settings/keyboard) that runs: copyq -e "menu()"
* Terminal:
** Favorites so far:
*** Default Gnome terminal + tmux & tmuxinator
*** Pantheon terminal
**** Installation: https://askubuntu.com/a/631201/325838
***** sudo add-apt-repository ppa:elementary-os/stable
***** Have to then tweak it to point to (xenial as of 2017) instead of most current
***** sudo apt-get update
***** sudo apt-get install pantheon-terminal
**** gsettings set org.pantheon.terminal.settings tab-bar-behavior "Hide When Single Tab"
**** Ctrl-c copies if text is selected; otherwise sends interrupt as usual. Ctrl-v pastes.
**** Decent search
* Backup:
** Strategy:
*** deja dup (just called `Backups` in ubuntu) backs up ~/home/ (including aptik-settings-backup) to iMac.
*** Aptik can be used to back up most of the other config -- dconf settings, groups, icons, repos, themes...
**** Install aptik (probably) 19.07
**** mkdir ~/Documents/aptik (ONLY if doesn't exist, which it should if I've restored home dir)
**** sudo aptik --backup-all --comp lz4 --basepath '/home/egg/Documents/aptik' --skip-flatpaks --skip-cache --skip-packages --skip-snaps --skip-users --skip-mounts --skip-home --yes
**** TODO root crontab calls aptik, which backs up all settings not in ~/home/ to ~/aptik-settings-backup
*** TODO etckeeper puts /etc under version control (but does not push it anywhere else, because it has sekrit stuff).
**** Will automatically commit changes daily.
**** https://opensource.com/article/17/3/etckeeper-version-control
**** https://help.ubuntu.com/lts/serverguide/etckeeper.html
*** Root backups (not clones): rsync
**** run from root, this might work given enough tries:
***** rsync -axqHAW --progress --ignore-existing --numeric-ids --delete-excluded --exclude=36GiB.swap --exclude={"/dev","/proc","/sys","/tmp","/run","/mnt","/media","/lost+found","/var/lib/docker","/usr/share/perl"} --info=progress2 / egg@192.168.1.222:/Volumes/LaptopBackup/x1full/ 2>&1 | tee -a /tmp/rsync-errors
rsync -axqHAW --progress --ignore-existing --numeric-ids --exclude=36GiB.swap --exclude={"/dev","/proc","/sys","/tmp","/run","/mnt","/media","/lost+found","/var/lib/docker","/usr/share/perl"} --info=progress2 / egg@192.168.1.222:/Volumes/LaptopBackup/x1full/ 2>&1 | tee -a /tmp/rsync-errors
rsync -axqHAW --progress --ignore-existing --numeric-ids --info=progress2 /home/egg egg@192.168.1.222:/Volumes/LaptopBackup/x1-homedir-2019-12-25/ 2>&1 | tee -a /tmp/rsync-home-errors
**** Note! Important not to use -X option if copying to mac.
** Details:
*** TODO add aptik call to root crontab
**** One person's take on the crontab command:
***** `cd /home/egg/aptik-settings-backup && aptik --backup-all --user <myusername> --password <mypassword> --yes >> ./aptik_cron.log 2>&1`
****  The options I need for an aptik CLI call:
***** --user egg --password SOMETHING --backup-dir /home/egg/aptik-settings-backup --yes
*****  --backup-ppa --backup-packages --backup-users --backup-configs --backup-themes --backup-crontab
*** There's also dconf-backup (maybe aptik doesn't do dconf? :( )
****  https://github.com/pixelastic/dconf-export
*** /Volumes/Unused on imac2013 can become my home backup drive
* Work stuff (DW):
** keybase [scripted]: https://keybase.io/docs/the_app/install_linux
curl -O https://prerelease.keybase.io/keybase_amd64.deb
sudo dpkg -i keybase_amd64.deb
sudo apt-get install -f
run_keybase
** Set up memcached:
*** Memcached setup:
**** make sure memcached is installed, running as a service, and starting at system boot (see https://github.com/memcached/memcached/wiki/Install):
***** sudo apt-get install memcached
***** systemctl enable memcached
***** systemctl start memcached (if you need it now)
**** in your config file (linux: `/etc/memcached.conf`, memory is set by default to 64MB (via `-m 64`) -- set that to as much (max) memory as you're comfortable devoting to memcached (I'm giving it 3072MB).
*** Connecting datomic to memcached:
**** In your ~/.lein/profiles.clj, add `{:user {:jvm-opts ["-Ddatomic.memcachedServers=127.0.0.1:11211"]}}` (`{:user {}}` probably already exists, so just add the jvm-opts key/val)
**** Restart memcached (linux: `service memcached restart`; mac: maybe launchctl unload and then load?)
**** Start your local REPLs. On repeated runs, some datomic stuff should be faster (until you reboot your computer; then the cache has to build back up).
* Future:
** Investigate running multiple Linux distros simultaneously
*** Virtualbox, but it went so terribly wrong last time. Probably try this first, but clone FIRST
*** Containers are an option (LXC or Docker) but apparently getting GUI apps running in them is hard.
**** https://beebom.com/how-run-multiple-distros-using-linux-containers/
*** Doesn't solve that option, but be aware of firejail for sandboxing apps
**** https://beebom.com/how-sandbox-non-trusted-apps-linux-systems/
** TODO Conky - Very nice, themable system info/clock/weather/whatever overlay:
*** https://github.com/brndnmtthws/conky
*** How to:
**** https://www.lifewire.com/beginners-guide-to-conky-4043352
**** https://itsfoss.com/conky-gui-ubuntu-1304/
*** Examples:
**** https://yesthisisme.deviantart.com/art/Conky-Conky-Conky-174343321
**** https://devuno.deviantart.com/art/Dirty-Conky-179991956
**** https://aaika.deviantart.com/art/Gobilum-Conky-1-0-303327080
*** LIST: https://www.deviantart.com/whats-hot/?q=conky+themes&offset=0



sleeping (make note somewhere) (edit in dconf editor):
- time before logout
- logout-delay
- sleep timeout computer when on AC
- screensaver/idle-activation-enabled


* Now automated
** Preferences:
*** dvorak
*** Displays/Night Light


** sudo apt install (see script at top)
*** vim xcape vlc xsel python-pygments openssh-server php-memcached memcached tmux htop make chrome-gnome-shell silversearcher-ag autojump tmuxinator gnome-sushi rename hardinfo jq
*** lm-sensors (so system-monitor can see fan speed)
*** Windows emulation (maybe):
**** wine, winetricks, playonlinu

** Gnome-tweak-tool to change various settings
*** Under keyboard / 'additional layout options'
**** caps-lock / 'swap ESC and caps lock'
**** Under ctrl-key-position I can switch left-alt and left-ctrl
**** Change overview shortcut to (nonexistent) right-super [I use super-space instead]
*** Under fonts: can scale fonts
** Vim setup:
*** vim: pathogen -
**** mkdir -p ~/.vim/autoload ~/.vim/bundle && curl -LSso ~/.vim/autoload/pathogen.vim https://tpo.pe/pathogen.vim
*** mkdir -p ~/tmp/vim_backup
*** Necessary? cd ~/.vim/bundle && git clone git://github.com/altercation/vim-colors-solarized.git
** Then clone dotfiles
*** git clone https://github.com/eggsyntax/dotfiles.git
*** https://github.com/eggsyntax/dotfiles
** Then link them
*** ln -s dotfiles/[.spacemacs, .vimrc, .bashrc, .clojure, etc]
** Spacemacs
*** git clone https://github.com/syl20bnr/spacemacs ~/.emacs.d

** autojump
*** have to manually set up on ubuntu (done in .bashrc)
** Clipboard Manager:
*** CopyQ:
**** sudo add-apt-repository ppa:hluk/copyq
**** sudo apt update && sudo apt install copyq
*** Or look for a faster one

** cdhist (aka `cd --`)
*** have to have setuptools beforehand:
sudo apt install python-setuptools
*** & then
     git clone http://github.com/bulletmark/cdhist
     cd cdhist
     sudo make install

** Aptik to auto-reinstall apps & ppas after upgrade: [scripted]
*** https://www.howtogeek.com/206454/how-to-backup-and-restore-your-apps-and-ppas-in-ubuntu-using-aptik/
*** sudo apt-add-repository ppa:teejee2008/ppa
*** sudo apt update
*** sudo apt install aptik
*** sudo apt install aptik-gtk (important! for GUI)

** Chrome - although I'm noticing it's a CPU hog, at least in VM, at least w/ lots of tabs [scripted]
*** wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
*** echo 'deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main' | sudo tee /etc/apt/sources.list.d/google-chrome.list


** Keyboard shortcuts: [scripted]
*** settings/devices/keyboard:
**** Set win/space to open overview
**** Close: super-q
** Clojure [scripted]
*** 2019: `sudo apt install clojure` is enough; no need to manually install Java (but what version does that install? I'm not sure)
*** Installing OpenJDK 11 & 8 [scripted]: https://linuxize.com/post/install-java-on-ubuntu-18-04/#installing-the-default-openjdk-java-11
**** sudo apt install openjdk-11-jdk
**** sudo apt install openjdk-8-jdk
*** 2019: use jenv to manage JDK [scripted]
**** mkdir ~/bin
**** git clone https://github.com/gcuisinier/jenv.git ~/bin/.jenv
**** echo 'export PATH="$HOME/bin/.jenv/bin:$PATH"' >> ~/.bash_profile
**** echo 'eval "$(jenv init -)"' >> ~/.bash_profile
**** <<MAKE NOTE>> of where the v11 and v8 jdk got put, then do roughly
***** jenv add /System/Library/Java/JavaVirtualMachines/1.8.0.jdk/Contents/Home
***** jenv add /System/Library/Java/JavaVirtualMachines/1.11.0.jdk/Contents/Home
**** jenv version (to show which are available)
**** jenv global [VERSION OF 11]
*** Java:
**** NOTE: probably time to not use the oracle jdk shown below; use Open JDK instead.
**** Add repo for oracle jdk: (note: webupd8team is not as sketchy as they sound ;P )
        sudo apt-get install python-software-properties
        sudo add-apt-repository ppa:webupd8team/java
        sudo apt-get update
**** install:
        sudo apt-get install oracle-java8-installer
        oracle-java8-installer
**** Discussion of the above at
***** https://www.digitalocean.com/community/tutorials/how-to-install-java-on-ubuntu-with-apt-get
*** Leiningen (don't install through apt, too old):
**** https://github.com/technomancy/leiningen
*** Maybe: I like to use lein-drip and drip:
**** drip: https://github.com/flatland/drip
 curl -L http://drip.flatland.org > ~/bin/drip
 chmod 755 ~/bin/drip
**** lein-drip: https://github.com/josteink/lein-drip
***** just require in ~/.lein/profiles.clj
*** must follow installation directions for clojure-lint
**** https://github.com/n2o/clojure-lint-spacemacs-layer#installation

* End org mode
End of:
NON_EXECUTABLE_ORG_MODE
